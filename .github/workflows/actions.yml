name: PUT-labs-instructions-CI-demonstration

# Run on schedule, cron syntax, everyday at 9:45 and on push
on:
  push:
  schedule:
    - cron:  '45 9 * * *'

env:
  WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY1 }}

jobs:
  build-to-html:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Sphinx
        run: |
          sudo apt-get update && sudo apt-get install python3-sphinx
      - name: Build HTML artifacts
        run: |
          sphinx-build -E -W -b html source build/html
      - uses: actions/upload-artifact@v3
        with:
          name: lab_html
          path: build/html

  test-external-links:
    needs: build-to-html
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Sphinx # Sphinx installation is duplicated...
        run: |
          sudo apt-get update && sudo apt-get install python3-sphinx
      - name: Test external links with linkcheck builder
        run: |
          sphinx-build -E -W -b linkcheck source build/linkcheck
      - uses: actions/upload-artifact@v3
        with:
          name: linkcheck_out
          path: build/linkcheck

  test-code-snippets:
    needs: build-to-html
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Sphinx
        run: |
          sudo apt-get update && sudo apt-get install python3-sphinx
      - name: Install Python dependencies
        run: |
          sudo pip install numpy
      - name: Test code snippets
        run: |
          sphinx-build -E -W -b doctest source build/doctest
      - uses: actions/upload-artifact@v3
        with:
          name: doctest_out
          path: build/doctest

  test-api-access-curl:
    needs: build-to-html
    runs-on: ubuntu-latest
    steps:
      - name: Test Weather API access with curl
        run: |
          curl --fail "https://api.openweathermap.org/data/2.5/weather?lat=44.34&lon=10.99&appid=${WEATHER_API_KEY}"

  test-api-access-robot:
    needs: build-to-html
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install RobotTestingFramework with Request library
        run: |
          pip install robotframework robotframework-requests
      - name: Test Weather API access with RobotTestingFramework
        run: |
          robot --variable WEATHER_API_KEY:${WEATHER_API_KEY} -d build/robot robot-tests/api_test.robot
      - uses: actions/upload-artifact@v3
        with:
          name: robot_api_out
          path: build/robot





